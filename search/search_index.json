{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u00b6 Sources \u00b6 Project \u00b6","title":"Home"},{"location":"#about","text":"","title":"About"},{"location":"#sources","text":"","title":"Sources"},{"location":"#project","text":"","title":"Project"},{"location":"install/","text":"Convention \u00b6 A lot of configuration can be avoided by this simple convention: Put your cloned version of this repository in your ~/github directory. If you do not have it, make it, and organize it exactly as GitHub is organized: by organization and then by repo. Get the software \u00b6 Clone the among/fusus repo from GitHub. Here are the instructions to get this repo and place it in the conventional place on your file system. 1 2 3 4 5 6 cd mkdir github cd github mkdir among git clone https://github.com/among/fusus cd fusus If you want to update later, make sure that you do not have work of your own in this repo. If you have, copy it to a location outside of this repo. 1 2 3 4 cd ~/github/among/fusus git fetch origin git checkout master git reset --hard origin/master Install the software \u00b6 You are going to install the Python package pipeline that is contained in the repo. During install, all the packages that pipeline is dependent on, will be installed into your current Python3 installation. The package pipeline itself will be added to your Python3 installation in such a way that it can be used from anywhere, while the package inside the repo is being accessed. This is achieved by the fact that the installer will create a link to the repo. 1 2 cd ~/github/among/fusus pip3 install pipeline -e . Mind the dot Do not forget the . at the end of the line in the above instruction. No nead to repeat this step When you update the repo later, it will not be necessary to redo the pip3 install step, because the soft link to the pipeline package in the repo will still be valid.","title":"Install"},{"location":"install/#convention","text":"A lot of configuration can be avoided by this simple convention: Put your cloned version of this repository in your ~/github directory. If you do not have it, make it, and organize it exactly as GitHub is organized: by organization and then by repo.","title":"Convention"},{"location":"install/#get-the-software","text":"Clone the among/fusus repo from GitHub. Here are the instructions to get this repo and place it in the conventional place on your file system. 1 2 3 4 5 6 cd mkdir github cd github mkdir among git clone https://github.com/among/fusus cd fusus If you want to update later, make sure that you do not have work of your own in this repo. If you have, copy it to a location outside of this repo. 1 2 3 4 cd ~/github/among/fusus git fetch origin git checkout master git reset --hard origin/master","title":"Get the software"},{"location":"install/#install-the-software","text":"You are going to install the Python package pipeline that is contained in the repo. During install, all the packages that pipeline is dependent on, will be installed into your current Python3 installation. The package pipeline itself will be added to your Python3 installation in such a way that it can be used from anywhere, while the package inside the repo is being accessed. This is achieved by the fact that the installer will create a link to the repo. 1 2 cd ~/github/among/fusus pip3 install pipeline -e . Mind the dot Do not forget the . at the end of the line in the above instruction. No nead to repeat this step When you update the repo later, it will not be necessary to redo the pip3 install step, because the soft link to the pipeline package in the repo will still be valid.","title":"Install the software"},{"location":"methods/","text":"Cleaning \u00b6 Histogram \u00b6 We make a histogram of pixel densities in vertical and horizontal lines. These can be used to derive line boundaries. Page division \u00b6 Wiping marks \u00b6","title":"Methods"},{"location":"methods/#cleaning","text":"","title":"Cleaning"},{"location":"methods/#histogram","text":"We make a histogram of pixel densities in vertical and horizontal lines. These can be used to derive line boundaries.","title":"Histogram"},{"location":"methods/#page-division","text":"","title":"Page division"},{"location":"methods/#wiping-marks","text":"","title":"Wiping marks"},{"location":"use/","text":"Book processing \u00b6 We will transform scanned pages of a book into Unicode text following a number of processing steps. The express way \u00b6 In the terminal, cd to a book directory (see below) and run 1 python3 -m pipeline.book This will process all scanned pages with default settings. With more control and feedback \u00b6 Copy the notebook example/do.ipynb into a book directory (see below). Run cells in the notebook, and see doExample to learn by example how you can configure the processing parameters and control the processing of pages. Book directory \u00b6 A book directory should have subdirectories: in Contains mage files (scans at 1800 x2700 pixels approximately) marks Contains subdirectories with little rectangles copied from the scans and saved in individual files at the same resolution. Marks can be dividers or normal marks. Dividers \u00b6 Dividers are used to skip portions of the page. Marks \u00b6 Marks are spots that will be wiped clean wherever they are found. They are organized in bands which are sets of horizontal strokes on the page, relative to the individual lines. Marks will only be searched for within the bands they belong to, in order to avoid false positives. The marks directory may contain the following bands: name kind items remarks divider dividers footnote. ext not a band high marks arbitrary images in the upper band of a line low marks arbitrary images in the lower band of a line mid marks arbitrary images in the central, narrow band of a line, with lots of ink main marks arbitrary images in the band where nearly all the letter material is broad marks arbitrary images as main , but a bit broader inter marks arbitrary images between the lines","title":"Use"},{"location":"use/#book-processing","text":"We will transform scanned pages of a book into Unicode text following a number of processing steps.","title":"Book processing"},{"location":"use/#the-express-way","text":"In the terminal, cd to a book directory (see below) and run 1 python3 -m pipeline.book This will process all scanned pages with default settings.","title":"The express way"},{"location":"use/#with-more-control-and-feedback","text":"Copy the notebook example/do.ipynb into a book directory (see below). Run cells in the notebook, and see doExample to learn by example how you can configure the processing parameters and control the processing of pages.","title":"With more control and feedback"},{"location":"use/#book-directory","text":"A book directory should have subdirectories: in Contains mage files (scans at 1800 x2700 pixels approximately) marks Contains subdirectories with little rectangles copied from the scans and saved in individual files at the same resolution. Marks can be dividers or normal marks.","title":"Book directory"},{"location":"use/#dividers","text":"Dividers are used to skip portions of the page.","title":"Dividers"},{"location":"use/#marks","text":"Marks are spots that will be wiped clean wherever they are found. They are organized in bands which are sets of horizontal strokes on the page, relative to the individual lines. Marks will only be searched for within the bands they belong to, in order to avoid false positives. The marks directory may contain the following bands: name kind items remarks divider dividers footnote. ext not a band high marks arbitrary images in the upper band of a line low marks arbitrary images in the lower band of a line mid marks arbitrary images in the central, narrow band of a line, with lots of ink main marks arbitrary images in the band where nearly all the letter material is broad marks arbitrary images as main , but a bit broader inter marks arbitrary images between the lines","title":"Marks"}]}