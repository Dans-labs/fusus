{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u00b6 Sources \u00b6 Project \u00b6","title":"Home"},{"location":"#about","text":"","title":"About"},{"location":"#sources","text":"","title":"Sources"},{"location":"#project","text":"","title":"Project"},{"location":"configure/","text":"Default settings \u00b6 The default settings are listed in parameters.py . There are several ways to override the defaults. Reconfigure \u00b6 You can pass new values for the configuration settings to the method C.reconfigure() . Pass parameters \u00b6 Many methods accept parameters that override certain defaults for the execution of that method.","title":"Configure"},{"location":"configure/#default-settings","text":"The default settings are listed in parameters.py . There are several ways to override the defaults.","title":"Default settings"},{"location":"configure/#reconfigure","text":"You can pass new values for the configuration settings to the method C.reconfigure() .","title":"Reconfigure"},{"location":"configure/#pass-parameters","text":"Many methods accept parameters that override certain defaults for the execution of that method.","title":"Pass parameters"},{"location":"install/","text":"Convention \u00b6 A lot of configuration can be avoided by this simple convention: Put your cloned version of this repository in your ~/github directory. If you do not have it, make it, and organize it exactly as GitHub is organized: by organization and then by repo. Get the software \u00b6 Clone the among/fusus repo from GitHub. Here are the instructions to get this repo and place it in the conventional place on your file system. 1 2 3 4 5 6 cd mkdir github cd github mkdir among git clone https://github.com/among/fusus cd fusus If you want to update later, make sure that you do not have work of your own in this repo. If you have, copy it to a location outside of this repo. 1 2 3 4 cd ~/github/among/fusus git fetch origin git checkout master git reset --hard origin/master Install the software \u00b6 You are going to install the Python package pipeline that is contained in the repo. During install, all the packages that pipeline is dependent on, will be installed into your current Python3 installation. The package pipeline itself will be added to your Python3 installation in such a way that it can be used from anywhere, while the package inside the repo is being accessed. This is achieved by the fact that the installer will create a link to the repo. 1 2 cd ~/github/among/fusus pip3 install pipeline -e . Mind the dot Do not forget the . at the end of the line in the above instruction. No nead to repeat this step When you update the repo later, it will not be necessary to redo the pip3 install step, because the soft link to the pipeline package in the repo will still be valid.","title":"Install"},{"location":"install/#convention","text":"A lot of configuration can be avoided by this simple convention: Put your cloned version of this repository in your ~/github directory. If you do not have it, make it, and organize it exactly as GitHub is organized: by organization and then by repo.","title":"Convention"},{"location":"install/#get-the-software","text":"Clone the among/fusus repo from GitHub. Here are the instructions to get this repo and place it in the conventional place on your file system. 1 2 3 4 5 6 cd mkdir github cd github mkdir among git clone https://github.com/among/fusus cd fusus If you want to update later, make sure that you do not have work of your own in this repo. If you have, copy it to a location outside of this repo. 1 2 3 4 cd ~/github/among/fusus git fetch origin git checkout master git reset --hard origin/master","title":"Get the software"},{"location":"install/#install-the-software","text":"You are going to install the Python package pipeline that is contained in the repo. During install, all the packages that pipeline is dependent on, will be installed into your current Python3 installation. The package pipeline itself will be added to your Python3 installation in such a way that it can be used from anywhere, while the package inside the repo is being accessed. This is achieved by the fact that the installer will create a link to the repo. 1 2 cd ~/github/among/fusus pip3 install pipeline -e . Mind the dot Do not forget the . at the end of the line in the above instruction. No nead to repeat this step When you update the repo later, it will not be necessary to redo the pip3 install step, because the soft link to the pipeline package in the repo will still be valid.","title":"Install the software"},{"location":"methods/","text":"Cleaning \u00b6 Histogram \u00b6 We make a histogram of pixel densities in vertical and horizontal lines. These can be used to derive line boundaries. Page division \u00b6 Wiping marks \u00b6","title":"Methods"},{"location":"methods/#cleaning","text":"","title":"Cleaning"},{"location":"methods/#histogram","text":"We make a histogram of pixel densities in vertical and horizontal lines. These can be used to derive line boundaries.","title":"Histogram"},{"location":"methods/#page-division","text":"","title":"Page division"},{"location":"methods/#wiping-marks","text":"","title":"Wiping marks"},{"location":"use/","text":"Production line \u00b6 The software can be run as a production line. There are commands at several levels of detail: batch individual page single preprocessing step for a single page Configuration \u00b6 The pipeline can be configured at several levels. See Configure .","title":"Use"},{"location":"use/#production-line","text":"The software can be run as a production line. There are commands at several levels of detail: batch individual page single preprocessing step for a single page","title":"Production line"},{"location":"use/#configuration","text":"The pipeline can be configured at several levels. See Configure .","title":"Configuration"}]}